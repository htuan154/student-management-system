# version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: ./StudentManagement/Dockerfile
    ports:
      - "5049:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Server=db,1433;Database=StudentManagementSystem;User Id=sa;Password=Aa123456!;TrustServerCertificate=True;"
      ConnectionStrings__RedisConnection: "redis:6379"
      Jwt__Issuer: "StudentManagementSystem"
      Jwt__Audience: "StudentManagementSystem"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  db:
    # Sử dụng phiên bản SQL Server 2019 để ổn định hơn
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "Aa123456!"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    healthcheck:
      # --- ĐÃ SỬA ---
      # Cập nhật mật khẩu mới của bạn trong lệnh kiểm tra
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "Aa123456!", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - app-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 5
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - app-network
    depends_on:
      - backend

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app-network

volumes:
  sqlserver_data:

networks:
  app-network:
    driver: bridge
